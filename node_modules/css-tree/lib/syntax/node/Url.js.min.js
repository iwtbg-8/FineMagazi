import*as url from"../../utils/url.js";import*as string from"../../utils/string.js";import{Function as FunctionToken,String as StringToken,Url,RightParenthesis}from"../../tokenizer/index.js";export const name="Url";export const structure={value:String};export function parse(){const t=this.tokenStart;let e;switch(this.tokenType){case Url:e=url.decode(this.consume(Url));break;case FunctionToken:this.cmpStr(this.tokenStart,this.tokenEnd,"url(")||this.error("Function name must be `url`"),this.eat(FunctionToken),this.skipSC(),e=string.decode(this.consume(StringToken)),this.skipSC(),this.eof||this.eat(RightParenthesis);break;default:this.error("Url or Function is expected")}return{type:"Url",loc:this.getLocation(t,this.tokenStart),value:e}}export function generate(t){this.token(Url,url.encode(t.value))}