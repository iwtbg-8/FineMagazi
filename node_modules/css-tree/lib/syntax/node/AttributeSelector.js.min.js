import{Ident,String as StringToken,Delim,LeftSquareBracket,RightSquareBracket}from"../../tokenizer/index.js";const DOLLARSIGN=36,ASTERISK=42,EQUALSSIGN=61,CIRCUMFLEXACCENT=94,VERTICALLINE=124,TILDE=126;function getAttributeName(){this.eof&&this.error("Unexpected end of input");const t=this.tokenStart;let e=!1;return this.isDelim(42)?(e=!0,this.next()):this.isDelim(124)||this.eat(Ident),this.isDelim(124)?61!==this.charCodeAt(this.tokenStart+1)?(this.next(),this.eat(Ident)):e&&this.error("Identifier is expected",this.tokenEnd):e&&this.error("Vertical line is expected"),{type:"Identifier",loc:this.getLocation(t,this.tokenStart),name:this.substrToCursor(t)}}function getOperator(){const t=this.tokenStart,e=this.charCodeAt(t);return 61!==e&&126!==e&&94!==e&&36!==e&&42!==e&&124!==e&&this.error("Attribute selector (=, ~=, ^=, $=, *=, |=) is expected"),this.next(),61!==e&&(this.isDelim(61)||this.error("Equal sign is expected"),this.next()),this.substrToCursor(t)}export const name="AttributeSelector";export const structure={name:"Identifier",matcher:[String,null],value:["String","Identifier",null],flags:[String,null]};export function parse(){const t=this.tokenStart;let e,i=null,s=null,r=null;return this.eat(LeftSquareBracket),this.skipSC(),e=getAttributeName.call(this),this.skipSC(),this.tokenType!==RightSquareBracket&&(this.tokenType!==Ident&&(i=getOperator.call(this),this.skipSC(),s=this.tokenType===StringToken?this.String():this.Identifier(),this.skipSC()),this.tokenType===Ident&&(r=this.consume(Ident),this.skipSC())),this.eat(RightSquareBracket),{type:"AttributeSelector",loc:this.getLocation(t,this.tokenStart),name:e,matcher:i,value:s,flags:r}}export function generate(t){this.token(Delim,"["),this.node(t.name),null!==t.matcher&&(this.tokenize(t.matcher),this.node(t.value)),null!==t.flags&&this.token(Ident,t.flags),this.token(Delim,"]")}