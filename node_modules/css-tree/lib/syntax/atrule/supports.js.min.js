import{WhiteSpace,Comment,Ident,Function,Colon,LeftParenthesis}from"../../tokenizer/index.js";function consumeRaw(){return this.createSingleNodeList(this.Raw(this.tokenIndex,null,!1))}function parentheses(){return this.skipSC(),this.tokenType===Ident&&this.lookupNonWSType(1)===Colon?this.createSingleNodeList(this.Declaration()):readSequence.call(this)}function readSequence(){const e=this.createList();let t;this.skipSC();e:for(;!this.eof;){switch(this.tokenType){case Comment:case WhiteSpace:this.next();continue;case Function:t=this.Function(consumeRaw,this.scope.AtrulePrelude);break;case Ident:t=this.Identifier();break;case LeftParenthesis:t=this.Parentheses(parentheses,this.scope.AtrulePrelude);break;default:break e}e.push(t)}return e}export default{parse:{prelude(){const e=readSequence.call(this);return null===this.getFirstListNode(e)&&this.error("Condition is expected"),e},block(){return this.Block(!1)}}};