const{hasOwnProperty:hasOwnProperty}=Object.prototype,noop=function(){};function ensureFunction(e){return"function"==typeof e?e:noop}function invokeForType(e,t){return function(n,r,o){n.type===t&&e.call(this,n,r,o)}}function getWalkersFromStructure(e,t){const n=t.structure,r=[];for(const e in n){if(!1===hasOwnProperty.call(n,e))continue;let t=n[e];const o={name:e,type:!1,nullable:!1};Array.isArray(t)||(t=[t]);for(const e of t)null===e?o.nullable=!0:"string"==typeof e?o.type="node":Array.isArray(e)&&(o.type="list");o.type&&r.push(o)}return r.length?{context:t.walkContext,fields:r}:null}function getTypesFromConfig(e){const t={};for(const n in e.node)if(hasOwnProperty.call(e.node,n)){const r=e.node[n];if(!r.structure)throw new Error("Missed `structure` field in `"+n+"` node type definition");t[n]=getWalkersFromStructure(n,r)}return t}function createTypeIterator(e,t){const n=e.fields.slice(),r=e.context,o="string"==typeof r;return t&&n.reverse(),function(e,l,i,u){let s;o&&(s=l[r],l[r]=e);for(const r of n){const n=e[r.name];if(!r.nullable||n)if("list"===r.type){if(t?n.reduceRight(u,!1):n.reduce(u,!1))return!0}else if(i(n))return!0}o&&(l[r]=s)}}function createFastTraveralMap({StyleSheet:e,Atrule:t,Rule:n,Block:r,DeclarationList:o}){return{Atrule:{StyleSheet:e,Atrule:t,Rule:n,Block:r},Rule:{StyleSheet:e,Atrule:t,Rule:n,Block:r},Declaration:{StyleSheet:e,Atrule:t,Rule:n,Block:r,DeclarationList:o}}}export function createWalker(e){const t=getTypesFromConfig(e),n={},r={},o=Symbol("break-walk"),l=Symbol("skip-node");for(const e in t)hasOwnProperty.call(t,e)&&null!==t[e]&&(n[e]=createTypeIterator(t[e],!1),r[e]=createTypeIterator(t[e],!0));const i=createFastTraveralMap(n),u=createFastTraveralMap(r),s=function(e,s){function c(e,t,n){const r=a.call(h,e,t,n);return r===o||r!==l&&(!(!p.hasOwnProperty(e.type)||!p[e.type](e,h,c,y))||f.call(h,e,t,n)===o)}let a=noop,f=noop,p=n,y=(e,t,n,r)=>e||c(t,n,r);const h={break:o,skip:l,root:e,stylesheet:null,atrule:null,atrulePrelude:null,rule:null,selector:null,block:null,declaration:null,function:null};if("function"==typeof s)a=s;else if(s&&(a=ensureFunction(s.enter),f=ensureFunction(s.leave),s.reverse&&(p=r),s.visit)){if(i.hasOwnProperty(s.visit))p=s.reverse?u[s.visit]:i[s.visit];else if(!t.hasOwnProperty(s.visit))throw new Error("Bad value `"+s.visit+"` for `visit` option (should be: "+Object.keys(t).sort().join(", ")+")");a=invokeForType(a,s.visit),f=invokeForType(f,s.visit)}if(a===noop&&f===noop)throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");c(e)};return s.break=o,s.skip=l,s.find=function(e,t){let n=null;return s(e,function(e,r,l){if(t.call(this,e,r,l))return n=e,o}),n},s.findLast=function(e,t){let n=null;return s(e,{reverse:!0,enter(e,r,l){if(t.call(this,e,r,l))return n=e,o}}),n},s.findAll=function(e,t){const n=[];return s(e,function(e,r,o){t.call(this,e,r,o)&&n.push(e)}),n},s}