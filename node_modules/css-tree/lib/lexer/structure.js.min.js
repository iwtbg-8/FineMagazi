import{List}from"../utils/List.js";const{hasOwnProperty:hasOwnProperty}=Object.prototype;function isValidNumber(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&e>=0}function isValidLocation(e){return Boolean(e)&&isValidNumber(e.offset)&&isValidNumber(e.line)&&isValidNumber(e.column)}function createNodeStructureChecker(e,t){return function(r,o){if(!r||r.constructor!==Object)return o(r,"Type of node should be an Object");for(let n in r){let i=!0;if(!1!==hasOwnProperty.call(r,n)){if("type"===n)r.type!==e&&o(r,"Wrong node type `"+r.type+"`, expected `"+e+"`");else if("loc"===n){if(null===r.loc)continue;if(r.loc&&r.loc.constructor===Object)if("string"!=typeof r.loc.source)n+=".source";else if(isValidLocation(r.loc.start)){if(isValidLocation(r.loc.end))continue;n+=".end"}else n+=".start";i=!1}else if(t.hasOwnProperty(n)){i=!1;for(let e=0;!i&&e<t[n].length;e++){const o=t[n][e];switch(o){case String:i="string"==typeof r[n];break;case Boolean:i="boolean"==typeof r[n];break;case null:i=null===r[n];break;default:"string"==typeof o?i=r[n]&&r[n].type===o:Array.isArray(o)&&(i=r[n]instanceof List)}}}else o(r,"Unknown field `"+n+"` for "+e+" node type");i||o(r,"Bad value for `"+e+"."+n+"`")}}for(const n in t)hasOwnProperty.call(t,n)&&!1===hasOwnProperty.call(r,n)&&o(r,"Field `"+e+"."+n+"` is missed")}}function processStructure(e,t){const r=t.structure,o={type:String,loc:!0},n={type:'"'+e+'"'};for(const t in r){if(!1===hasOwnProperty.call(r,t))continue;const i=[],s=o[t]=Array.isArray(r[t])?r[t].slice():[r[t]];for(let r=0;r<s.length;r++){const o=s[r];if(o===String||o===Boolean)i.push(o.name);else if(null===o)i.push("null");else if("string"==typeof o)i.push("<"+o+">");else{if(!Array.isArray(o))throw new Error("Wrong value `"+o+"` in `"+e+"."+t+"` structure definition");i.push("List")}}n[t]=i.join(" | ")}return{docs:n,check:createNodeStructureChecker(e,o)}}export function getStructureFromConfig(e){const t={};if(e.node)for(const r in e.node)if(hasOwnProperty.call(e.node,r)){const o=e.node[r];if(!o.structure)throw new Error("Missed `structure` field in `"+r+"` node type definition");t[r]=processStructure(r,o)}return t}