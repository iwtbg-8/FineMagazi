import{createCustomError}from"../utils/create-custom-error.js";const MAX_LINE_LENGTH=100,OFFSET_CORRECTION=60,TAB_REPLACEMENT="    ";function sourceFragment({source:r,line:t,column:e},n){function o(r,t){return s.slice(r,t).map((t,e)=>String(r+e+1).padStart(u)+" |"+t).join("\n")}const s=r.split(/\r\n?|\n|\f/),a=Math.max(1,t-n)-1,c=Math.min(t+n,s.length+1),u=Math.max(4,String(c).length)+1;let l=0;(e+=3*(s[t-1].substr(0,e-1).match(/\t/g)||[]).length)>100&&(l=e-60+3,e=58);for(let r=a;r<=c;r++)r>=0&&r<s.length&&(s[r]=s[r].replace(/\t/g,"    "),s[r]=(l>0&&s[r].length>l?"…":"")+s[r].substr(l,98)+(s[r].length>l+100-1?"…":""));return[o(a,t),new Array(e+u+2).join("-")+"^",o(t,c)].filter(Boolean).join("\n")}export function SyntaxError(r,t,e,n,o){return Object.assign(createCustomError("SyntaxError",r),{source:t,offset:e,line:n,column:o,sourceFragment:r=>sourceFragment({source:t,line:n,column:o},isNaN(r)?0:r),get formattedMessage(){return`Parse error: ${r}\n`+sourceFragment({source:t,line:n,column:o},2)}})}