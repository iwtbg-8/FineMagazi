const EOF=0;export function isDigit(t){return t>=48&&t<=57}export function isHexDigit(t){return isDigit(t)||t>=65&&t<=70||t>=97&&t<=102}export function isUppercaseLetter(t){return t>=65&&t<=90}export function isLowercaseLetter(t){return t>=97&&t<=122}export function isLetter(t){return isUppercaseLetter(t)||isLowercaseLetter(t)}export function isNonAscii(t){return t>=128}export function isNameStart(t){return isLetter(t)||isNonAscii(t)||95===t}export function isName(t){return isNameStart(t)||isDigit(t)||45===t}export function isNonPrintable(t){return t>=0&&t<=8||11===t||t>=14&&t<=31||127===t}export function isNewline(t){return 10===t||13===t||12===t}export function isWhiteSpace(t){return isNewline(t)||32===t||9===t}export function isValidEscape(t,e){return 92===t&&(!isNewline(e)&&0!==e)}export function isIdentifierStart(t,e,i){return 45===t?isNameStart(e)||45===e||isValidEscape(e,i):!!isNameStart(t)||92===t&&isValidEscape(t,e)}export function isNumberStart(t,e,i){return 43===t||45===t?isDigit(e)?2:46===e&&isDigit(i)?3:0:46===t?isDigit(e)?2:0:isDigit(t)?1:0}export function isBOM(t){return 65279===t||65534===t?1:0}const CATEGORY=new Array(128);export const EofCategory=128;export const WhiteSpaceCategory=130;export const DigitCategory=131;export const NameStartCategory=132;export const NonPrintableCategory=133;for(let t=0;t<CATEGORY.length;t++)CATEGORY[t]=(isWhiteSpace(t)?130:isDigit(t)&&131)||isNameStart(t)&&132||isNonPrintable(t)&&133||t||128;export function charCodeCategory(t){return t<128?CATEGORY[t]:132}