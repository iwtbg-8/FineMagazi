import{HOP,makePredicate,return_this,string_template,regexp_source_fix,regexp_is_safe}from"../utils/index.js";import{AST_Array,AST_BigInt,AST_Binary,AST_Call,AST_Chain,AST_Class,AST_Conditional,AST_Constant,AST_Dot,AST_Expansion,AST_Function,AST_Lambda,AST_New,AST_Node,AST_Object,AST_PropAccess,AST_RegExp,AST_Statement,AST_Symbol,AST_SymbolRef,AST_TemplateString,AST_UnaryPrefix,AST_With}from"../ast.js";import{is_undeclared_ref}from"./inference.js";import{is_pure_native_value,is_pure_native_fn,is_pure_native_method}from"./native-objects.js";function def_eval(e,t){e.DEFMETHOD("_eval",t)}export const nullish=Symbol("This AST_Chain is nullish");AST_Node.DEFMETHOD("evaluate",function(e){if(!e.option("evaluate"))return this;var t=this._eval(e,1);if(!t||t instanceof RegExp)return t;if("function"==typeof t||"object"==typeof t||t==nullish)return this;if("string"==typeof t){const n=this.size(e);if(t.length+2>n)return this}return t});var unaryPrefix=makePredicate("! ~ - + void");AST_Node.DEFMETHOD("is_constant",function(){return this instanceof AST_Constant?!(this instanceof AST_RegExp):this instanceof AST_UnaryPrefix&&unaryPrefix.has(this.operator)&&(this.expression instanceof AST_Constant||this.expression.is_constant())}),def_eval(AST_Statement,function(){throw new Error(string_template("Cannot evaluate a statement [{file}:{line},{col}]",this.start))}),def_eval(AST_Lambda,return_this),def_eval(AST_Class,return_this),def_eval(AST_Node,return_this),def_eval(AST_Constant,function(){return this.getValue()});const supports_bigint="function"==typeof BigInt;def_eval(AST_BigInt,function(){return supports_bigint?BigInt(this.value):this}),def_eval(AST_RegExp,function(e){let t=e.evaluated_regexps.get(this.value);if(void 0===t&&regexp_is_safe(this.value.source)){try{const{source:e,flags:n}=this.value;t=new RegExp(e,n)}catch(e){t=null}e.evaluated_regexps.set(this.value,t)}return t||this}),def_eval(AST_TemplateString,function(){return 1!==this.segments.length?this:this.segments[0].value}),def_eval(AST_Function,function(e){if(e.option("unsafe")){var t=function(){};return t.node=this,t.toString=()=>this.print_to_string(),t}return this}),def_eval(AST_Array,function(e,t){if(e.option("unsafe")){for(var n=[],r=0,i=this.elements.length;r<i;r++){var a=this.elements[r],s=a._eval(e,t);if(a===s)return this;n.push(s)}return n}return this}),def_eval(AST_Object,function(e,t){if(e.option("unsafe")){for(var n={},r=0,i=this.properties.length;r<i;r++){var a=this.properties[r];if(a instanceof AST_Expansion)return this;var s=a.key;if(s instanceof AST_Symbol)s=s.name;else if(s instanceof AST_Node&&(s=s._eval(e,t))===a.key)return this;if("function"==typeof Object.prototype[s])return this;if(!(a.value instanceof AST_Function)&&(n[s]=a.value._eval(e,t),n[s]===a.value))return this}return n}return this});var non_converting_unary=makePredicate("! typeof void");def_eval(AST_UnaryPrefix,function(e,t){var n=this.expression;if(e.option("typeofs")&&"typeof"==this.operator){if(n instanceof AST_Lambda||n instanceof AST_SymbolRef&&n.fixed_value()instanceof AST_Lambda)return"function";if((n instanceof AST_Object||n instanceof AST_Array||n instanceof AST_SymbolRef&&(n.fixed_value()instanceof AST_Object||n.fixed_value()instanceof AST_Array))&&!n.has_side_effects(e))return"object"}if(non_converting_unary.has(this.operator)||t++,(n=n._eval(e,t))===this.expression)return this;switch(this.operator){case"!":return!n;case"typeof":return n instanceof RegExp?this:typeof n;case"void":return;case"~":return~n;case"-":return-n;case"+":return+n}return this});var non_converting_binary=makePredicate("&& || ?? === !==");const identity_comparison=makePredicate("== != === !=="),has_identity=e=>"object"==typeof e||"function"==typeof e||"symbol"==typeof e;def_eval(AST_Binary,function(e,t){non_converting_binary.has(this.operator)||t++;var n=this.left._eval(e,t);if(n===this.left)return this;var r,i=this.right._eval(e,t);if(i===this.right)return this;if(null!=n&&null!=i&&identity_comparison.has(this.operator)&&has_identity(n)&&has_identity(i)&&typeof n==typeof i)return this;if("bigint"==typeof n!=("bigint"==typeof i)||"bigint"==typeof n&&(">>>"===this.operator||"/"===this.operator&&0===Number(i)))return this;switch(this.operator){case"&&":r=n&&i;break;case"||":r=n||i;break;case"??":r=null!=n?n:i;break;case"|":r=n|i;break;case"&":r=n&i;break;case"^":r=n^i;break;case"+":r=n+i;break;case"*":r=n*i;break;case"**":r=n**i;break;case"/":r=n/i;break;case"%":r=n%i;break;case"-":r=n-i;break;case"<<":r=n<<i;break;case">>":r=n>>i;break;case">>>":r=n>>>i;break;case"==":r=n==i;break;case"===":r=n===i;break;case"!=":r=n!=i;break;case"!==":r=n!==i;break;case"<":r=n<i;break;case"<=":r=n<=i;break;case">":r=n>i;break;case">=":r=n>=i;break;default:return this}return"number"==typeof r&&isNaN(r)&&e.find_parent(AST_With)?this:r}),def_eval(AST_Conditional,function(e,t){var n=this.condition._eval(e,t);if(n===this.condition)return this;var r=n?this.consequent:this.alternative,i=r._eval(e,t);return i===r?this:i});const reentrant_ref_eval=new Set;def_eval(AST_SymbolRef,function(e,t){if(reentrant_ref_eval.has(this))return this;var n=this.fixed_value();if(!n)return this;reentrant_ref_eval.add(this);const r=n._eval(e,t);if(reentrant_ref_eval.delete(this),r===n)return this;if(r&&"object"==typeof r){var i=this.definition().escaped;if(i&&t>i)return this}return r});const global_objs={Array:Array,Math:Math,Number:Number,Object:Object,String:String},regexp_flags=new Set(["dotAll","global","ignoreCase","multiline","sticky","unicode"]);def_eval(AST_PropAccess,function(e,t){let n=this.expression._eval(e,t+1);if(n===nullish||this.optional&&null==n)return nullish;if("length"===this.property){if("string"==typeof n)return n.length;if(n instanceof AST_Array&&n.elements.every(e=>!(e instanceof AST_Expansion))&&n.elements.every(t=>!t.has_side_effects(e)))return n.elements.length}if(e.option("unsafe")){var r=this.property;if(r instanceof AST_Node&&(r=r._eval(e,t))===this.property)return this;var i=this.expression;if(is_undeclared_ref(i)){var a,s="hasOwnProperty"===i.name&&"call"===r&&(a=e.parent()&&e.parent().args)&&a&&a[0]&&a[0].evaluate(e);if(null==(s=s instanceof AST_Dot?s.expression:s)||s.thedef&&s.thedef.undeclared)return this.clone();if(!is_pure_native_value(i.name,r))return this;n=global_objs[i.name]}else{if(n instanceof RegExp){if("source"==r)return regexp_source_fix(n.source);if("flags"==r||regexp_flags.has(r))return n[r]}if(!n||n===i||!HOP(n,r))return this;if("function"==typeof n)switch(r){case"name":return n.node.name?n.node.name.name:"";case"length":return n.node.length_property();default:return this}}return n[r]}return this}),def_eval(AST_Chain,function(e,t){const n=this.expression._eval(e,t);return n===nullish?void 0:n===this.expression?this:n}),def_eval(AST_Call,function(e,t){var n=this.expression;const r=n._eval(e,t);if(r===nullish||this.optional&&null==r)return nullish;if(e.option("unsafe")&&n instanceof AST_PropAccess){var i,a=n.property;if(a instanceof AST_Node&&(a=a._eval(e,t))===n.property)return this;var s=n.expression;if(is_undeclared_ref(s)){var o="hasOwnProperty"===s.name&&"call"===a&&this.args[0]&&this.args[0].evaluate(e);if(null==(o=o instanceof AST_Dot?o.expression:o)||o.thedef&&o.thedef.undeclared)return this.clone();if(!is_pure_native_fn(s.name,a))return this;i=global_objs[s.name]}else{if((i=s._eval(e,t+1))===s||!i)return this;if(!is_pure_native_method(i.constructor.name,a))return this}for(var f=[],_=0,u=this.args.length;_<u;_++){var l=this.args[_],h=l._eval(e,t);if(l===h)return this;if(l instanceof AST_Lambda)return this;f.push(h)}try{return i[a].apply(i,f)}catch(e){}}return this}),def_eval(AST_New,return_this);