import{AST_Array,AST_Chain,AST_Constant,AST_Dot,AST_ImportMeta,AST_Node,AST_Object,AST_ObjectKeyVal,AST_PropAccess,AST_SymbolDeclaration,AST_SymbolRef,AST_Toplevel,TreeTransformer}from"../ast.js";import{make_node,noop,HOP}from"../utils/index.js";import{make_node_from_constant}from"./common.js";import{is_lhs}from"./inference.js";!function(e){function o(e,n){if(e instanceof AST_Node)return e instanceof AST_Constant||(e=e.clone(!0)),make_node(e.CTOR,n,e);if(Array.isArray(e))return make_node(AST_Array,n,{elements:e.map(function(e){return o(e,n)})});if(e&&"object"==typeof e){var t=[];for(var r in e)HOP(e,r)&&t.push(make_node(AST_ObjectKeyVal,n,{key:r,value:o(e[r],n)}));return make_node(AST_Object,n,{properties:t})}return make_node_from_constant(e,n)}AST_Toplevel.DEFMETHOD("resolve_defines",function(e){return e.option("global_defs")?(this.figure_out_scope({ie8:e.option("ie8")}),this.transform(new TreeTransformer(function(o){var n=o._find_defs(e,"");if(n){for(var t,r=0,i=o;(t=this.parent(r++))&&t instanceof AST_PropAccess&&t.expression===i;)i=t;if(!is_lhs(i,t))return n}}))):this}),e(AST_Node,noop),e(AST_Chain,function(e,o){return this.expression._find_defs(e,o)}),e(AST_Dot,function(e,o){return this.expression._find_defs(e,"."+this.property+o)}),e(AST_SymbolDeclaration,function(){this.global()}),e(AST_SymbolRef,function(e,n){if(this.global()){var t=e.option("global_defs"),r=this.name+n;return HOP(t,r)?o(t[r],this):void 0}}),e(AST_ImportMeta,function(e,n){var t=e.option("global_defs"),r="import.meta"+n;if(HOP(t,r))return o(t[r],this)})}(function(e,o){e.DEFMETHOD("_find_defs",o)});