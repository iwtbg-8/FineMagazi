import{make_node}from"./utils/index.js";import{AST_Accessor,AST_Array,AST_Arrow,AST_Assign,AST_Atom,AST_Await,AST_BigInt,AST_Binary,AST_Block,AST_BlockStatement,AST_Boolean,AST_Break,AST_Call,AST_Case,AST_Catch,AST_Chain,AST_Class,AST_ClassStaticBlock,AST_ClassExpression,AST_ClassProperty,AST_ClassPrivateProperty,AST_ConciseMethod,AST_Conditional,AST_Const,AST_Constant,AST_Continue,AST_Debugger,AST_Default,AST_DefaultAssign,AST_DefClass,AST_DefinitionsLike,AST_Defun,AST_Destructuring,AST_Directive,AST_Do,AST_Dot,AST_DotHash,AST_EmptyStatement,AST_Expansion,AST_Export,AST_False,AST_Finally,AST_For,AST_ForIn,AST_ForOf,AST_Function,AST_Hole,AST_If,AST_Import,AST_ImportMeta,AST_Label,AST_LabeledStatement,AST_LabelRef,AST_Lambda,AST_Let,AST_NameMapping,AST_New,AST_NewTarget,AST_Node,AST_Null,AST_Number,AST_Object,AST_ObjectGetter,AST_ObjectKeyVal,AST_ObjectProperty,AST_ObjectSetter,AST_PrefixedTemplateString,AST_PrivateGetter,AST_PrivateMethod,AST_PrivateSetter,AST_PrivateIn,AST_PropAccess,AST_RegExp,AST_Return,AST_Sequence,AST_SimpleStatement,AST_Statement,AST_String,AST_Sub,AST_Super,AST_Switch,AST_SwitchBranch,AST_Symbol,AST_SymbolCatch,AST_SymbolClass,AST_SymbolClassProperty,AST_SymbolPrivateProperty,AST_SymbolConst,AST_SymbolDefClass,AST_SymbolDefun,AST_SymbolExport,AST_SymbolExportForeign,AST_SymbolFunarg,AST_SymbolImport,AST_SymbolImportForeign,AST_SymbolLambda,AST_SymbolLet,AST_SymbolMethod,AST_SymbolRef,AST_SymbolVar,AST_SymbolUsing,AST_TemplateSegment,AST_TemplateString,AST_This,AST_Throw,AST_Token,AST_Toplevel,AST_True,AST_Try,AST_TryBlock,AST_Unary,AST_UnaryPostfix,AST_UnaryPrefix,AST_Using,AST_UsingDef,AST_Var,AST_VarDef,AST_VarDefLike,AST_While,AST_With,AST_Yield}from"./ast.js";import{is_basic_identifier_string}from"./parse.js";!function(){var e=function(e){for(var t=0;t<e.length;t++){if(!(e[t]instanceof AST_Statement&&e[t].body instanceof AST_String))return e;e[t]=new AST_Directive({start:e[t].start,end:e[t].end,quote:'"',value:e[t].body.value})}return e};function t(e){return e&&e.length>0?new AST_Object({start:a(e),end:o(e),properties:e.map(e=>new AST_ObjectKeyVal({start:a(e),end:o(e),key:e.key.name||e.key.value,value:s(e.value)}))}):null}var n={Program:function(t){return new AST_Toplevel({start:a(t),end:o(t),body:e(t.body.map(s))})},ArrayPattern:function(e){return new AST_Destructuring({start:a(e),end:o(e),names:e.elements.map(function(e){return null===e?new AST_Hole:s(e)}),is_array:!0})},ObjectPattern:function(e){return new AST_Destructuring({start:a(e),end:o(e),names:e.properties.map(s),is_array:!1})},AssignmentPattern:function(e){return new AST_DefaultAssign({start:a(e),end:o(e),left:s(e.left),operator:"=",right:s(e.right)})},SpreadElement:function(e){return new AST_Expansion({start:a(e),end:o(e),expression:s(e.argument)})},RestElement:function(e){return new AST_Expansion({start:a(e),end:o(e),expression:s(e.argument)})},TemplateElement:function(e){return new AST_TemplateSegment({start:a(e),end:o(e),value:e.value.cooked,raw:e.value.raw})},TemplateLiteral:function(e){for(var t=[],n=0;n<e.quasis.length;n++)t.push(s(e.quasis[n])),e.expressions[n]&&t.push(s(e.expressions[n]));return new AST_TemplateString({start:a(e),end:o(e),segments:t})},TaggedTemplateExpression:function(e){return new AST_PrefixedTemplateString({start:a(e),end:o(e),template_string:s(e.quasi),prefix:s(e.tag)})},FunctionDeclaration:function(t){return new AST_Defun({start:a(t),end:o(t),name:t.id&&l(AST_SymbolDefun,t.id),argnames:t.params.map(e=>S(e,AST_SymbolFunarg)),is_generator:t.generator,async:t.async,body:e(s(t.body).body)})},FunctionExpression:function(e){return p(e,!1)},ArrowFunctionExpression:function(e){const t="BlockStatement"===e.body.type?s(e.body).body:[make_node(AST_Return,{},{value:s(e.body)})];return new AST_Arrow({start:a(e),end:o(e),argnames:e.params.map(e=>S(e,AST_SymbolFunarg)),body:t,async:e.async})},ExpressionStatement:function(e){return new AST_SimpleStatement({start:a(e),end:o(e),body:s(e.expression)})},TryStatement:function(e){var t=e.handlers||[e.handler];if(t.length>1||e.guardedHandlers&&e.guardedHandlers.length)throw new Error("Multiple catch clauses are not supported.");return new AST_Try({start:a(e),end:o(e),body:new AST_TryBlock(s(e.block)),bcatch:s(t[0]),bfinally:e.finalizer?new AST_Finally(s(e.finalizer)):null})},Property:function(e){if("init"==e.kind&&!e.method){var t={start:a(e.key||e.value),end:o(e.value),key:e.computed?s(e.key):e.key.name||String(e.key.value),quote:u(e.key,e.computed),static:!1,value:s(e.value)};return new AST_ObjectKeyVal(t)}var n=p(e.value,!0);t={start:a(e.key||e.value),end:o(e.value),key:e.computed?s(e.key):l(AST_SymbolMethod,e.key),quote:u(e.key,e.computed),static:!1,value:n};return"get"==e.kind?new AST_ObjectGetter(t):"set"==e.kind?new AST_ObjectSetter(t):e.method?new AST_ConciseMethod(t):void 0},MethodDefinition:function(e){const t="PrivateIdentifier"===e.key.type,n=e.computed?s(e.key):new AST_SymbolMethod({name:e.key.name||String(e.key.value)});var r={start:a(e),end:o(e),key:n,quote:u(e.key,e.computed),value:p(e.value,!0),static:e.static};return"get"==e.kind?new(t?AST_PrivateGetter:AST_ObjectGetter)(r):"set"==e.kind?new(t?AST_PrivateSetter:AST_ObjectSetter)(r):new(t?AST_PrivateMethod:AST_ConciseMethod)(r)},FieldDefinition:function(e){let t;if(e.computed)t=s(e.key);else{if("Identifier"!==e.key.type)throw new Error("Non-Identifier key in FieldDefinition");t=s(e.key)}return new AST_ClassProperty({start:a(e),end:o(e),quote:u(e.key,e.computed),key:t,value:s(e.value),static:e.static})},PropertyDefinition:function(e){let t;if(e.computed)t=s(e.key);else{if("PrivateIdentifier"===e.key.type)return new AST_ClassPrivateProperty({start:a(e),end:o(e),key:s(e.key),value:s(e.value),static:e.static});t=l(AST_SymbolClassProperty,e.key)}return new AST_ClassProperty({start:a(e),end:o(e),quote:u(e.key,e.computed),key:t,value:s(e.value),static:e.static})},PrivateIdentifier:function(e){return new AST_SymbolPrivateProperty({start:a(e),end:o(e),name:e.name})},StaticBlock:function(e){return new AST_ClassStaticBlock({start:a(e),end:o(e),body:e.body.map(s)})},ArrayExpression:function(e){return new AST_Array({start:a(e),end:o(e),elements:e.elements.map(function(e){return null===e?new AST_Hole:s(e)})})},ObjectExpression:function(e){return new AST_Object({start:a(e),end:o(e),properties:e.properties.map(function(e){return"SpreadElement"===e.type||(e.type="Property"),s(e)})})},SequenceExpression:function(e){return new AST_Sequence({start:a(e),end:o(e),expressions:e.expressions.map(s)})},MemberExpression:function(e){return"PrivateIdentifier"===e.property.type?new AST_DotHash({start:a(e),end:o(e),property:e.property.name,expression:s(e.object),optional:e.optional||!1}):new(e.computed?AST_Sub:AST_Dot)({start:a(e),end:o(e),property:e.computed?s(e.property):e.property.name,expression:s(e.object),optional:e.optional||!1})},ChainExpression:function(e){return new AST_Chain({start:a(e),end:o(e),expression:s(e.expression)})},SwitchCase:function(e){return new(e.test?AST_Case:AST_Default)({start:a(e),end:o(e),expression:s(e.test),body:e.consequent.map(s)})},VariableDeclaration:function(e){let t,n,r=AST_VarDef,i=!1;"const"===e.kind?(t=AST_Const,n=AST_SymbolConst):"let"===e.kind?(t=AST_Let,n=AST_SymbolLet):"using"===e.kind?(t=AST_Using,r=AST_UsingDef,n=AST_SymbolUsing):"await using"===e.kind?(t=AST_Using,r=AST_UsingDef,n=AST_SymbolUsing,i=!0):(t=AST_Var,n=AST_SymbolVar);const u=e.declarations.map(e=>new r({start:a(e),end:o(e),name:S(e.id,n),value:s(e.init)}));return new t({start:a(e),end:o(e),definitions:u,await:i})},ImportDeclaration:function(e){var n=null,r=null;return e.specifiers.forEach(function(e){"ImportSpecifier"===e.type||"ImportNamespaceSpecifier"===e.type?(r||(r=[]),r.push(s(e))):"ImportDefaultSpecifier"===e.type&&(n=s(e))}),new AST_Import({start:a(e),end:o(e),imported_name:n,imported_names:r,module_name:s(e.source),attributes:t(e.attributes||e.assertions)})},ImportSpecifier:function(e){return new AST_NameMapping({start:a(e),end:o(e),foreign_name:l(AST_SymbolImportForeign,e.imported,"Literal"===e.imported.type),name:l(AST_SymbolImport,e.local)})},ImportDefaultSpecifier:function(e){return l(AST_SymbolImport,e.local)},ImportNamespaceSpecifier:function(e){return new AST_NameMapping({start:a(e),end:o(e),foreign_name:new AST_SymbolImportForeign({name:"*"}),name:l(AST_SymbolImport,e.local)})},ImportExpression:function(e){const t=[s(e.source)];return e.options&&t.push(s(e.options)),new AST_Call({start:a(e),end:o(e),expression:s({type:"Identifier",name:"import"}),optional:!1,args:t})},ExportAllDeclaration:function(e){var n=null==e.exported?new AST_SymbolExportForeign({name:"*"}):l(AST_SymbolExportForeign,e.exported,"Literal"===e.exported.type);return new AST_Export({start:a(e),end:o(e),exported_names:[new AST_NameMapping({start:a(e),end:o(e),name:new AST_SymbolExport({name:"*"}),foreign_name:n})],module_name:s(e.source),attributes:t(e.attributes||e.assertions)})},ExportNamedDeclaration:function(e){return e.declaration?new AST_Export({start:a(e),end:o(e),exported_definition:s(e.declaration),exported_names:null,module_name:null,attributes:null}):new AST_Export({start:a(e),end:o(e),exported_definition:null,exported_names:e.specifiers&&e.specifiers.length?e.specifiers.map(s):[],module_name:s(e.source),attributes:t(e.attributes||e.assertions)})},ExportDefaultDeclaration:function(e){return new AST_Export({start:a(e),end:o(e),exported_value:s(e.declaration),is_default:!0})},ExportSpecifier:function(e){return new AST_NameMapping({start:a(e),end:o(e),foreign_name:l(AST_SymbolExportForeign,e.exported,"Literal"===e.exported.type),name:l(AST_SymbolExport,e.local,"Literal"===e.local.type)})},Literal:function(e){var t=e.value,n={start:a(e),end:o(e)},r=e.regex;if(r&&r.pattern)return n.value={source:r.pattern,flags:r.flags},new AST_RegExp(n);if(r){const r=e.raw||t,a=r.match(/^\/(.*)\/(\w*)$/);if(!a)throw new Error("Invalid regex source "+r);const[o,i,s]=a;return n.value={source:i,flags:s},new AST_RegExp(n)}const i="bigint"==typeof e.value?e.value.toString():e.bigint;if("string"==typeof i)return n.value=i,n.raw=e.raw,new AST_BigInt(n);if(null===t)return new AST_Null(n);switch(typeof t){case"string":return n.quote='"',n.value=t,new AST_String(n);case"number":return n.value=t,n.raw=e.raw||t.toString(),new AST_Number(n);case"boolean":return new(t?AST_True:AST_False)(n)}},MetaProperty:function(e){return"new"===e.meta.name&&"target"===e.property.name?new AST_NewTarget({start:a(e),end:o(e)}):"import"===e.meta.name&&"meta"===e.property.name?new AST_ImportMeta({start:a(e),end:o(e)}):void 0},Identifier:function(e){return new AST_SymbolRef({start:a(e),end:o(e),name:e.name})},EmptyStatement:function(e){return new AST_EmptyStatement({start:a(e),end:o(e)})},BlockStatement:function(e){return new AST_BlockStatement({start:a(e),end:o(e),body:e.body.map(s)})},IfStatement:function(e){return new AST_If({start:a(e),end:o(e),condition:s(e.test),body:s(e.consequent),alternative:s(e.alternate)})},LabeledStatement:function(e){try{const t=l(AST_Label,e.label);i.push(t);return new AST_LabeledStatement({start:a(e),end:o(e),label:t,body:s(e.body)})}finally{i.pop()}},BreakStatement:function(e){return new AST_Break({start:a(e),end:o(e),label:c(e.label)})},ContinueStatement:function(e){return new AST_Continue({start:a(e),end:o(e),label:c(e.label)})},WithStatement:function(e){return new AST_With({start:a(e),end:o(e),expression:s(e.object),body:s(e.body)})},SwitchStatement:function(e){return new AST_Switch({start:a(e),end:o(e),expression:s(e.discriminant),body:e.cases.map(s)})},ReturnStatement:function(e){return new AST_Return({start:a(e),end:o(e),value:s(e.argument)})},ThrowStatement:function(e){return new AST_Throw({start:a(e),end:o(e),value:s(e.argument)})},WhileStatement:function(e){return new AST_While({start:a(e),end:o(e),condition:s(e.test),body:s(e.body)})},DoWhileStatement:function(e){return new AST_Do({start:a(e),end:o(e),condition:s(e.test),body:s(e.body)})},ForStatement:function(e){return new AST_For({start:a(e),end:o(e),init:s(e.init),condition:s(e.test),step:s(e.update),body:s(e.body)})},ForInStatement:function(e){return new AST_ForIn({start:a(e),end:o(e),init:s(e.left),object:s(e.right),body:s(e.body)})},ForOfStatement:function(e){return new AST_ForOf({start:a(e),end:o(e),init:s(e.left),object:s(e.right),body:s(e.body),await:e.await})},AwaitExpression:function(e){return new AST_Await({start:a(e),end:o(e),expression:s(e.argument)})},YieldExpression:function(e){return new AST_Yield({start:a(e),end:o(e),expression:s(e.argument),is_star:e.delegate})},DebuggerStatement:function(e){return new AST_Debugger({start:a(e),end:o(e)})},CatchClause:function(e){return new AST_Catch({start:a(e),end:o(e),argname:e.param?S(e.param,AST_SymbolCatch):null,body:s(e.body).body})},ThisExpression:function(e){return new AST_This({start:a(e),name:"this",end:o(e)})},Super:function(e){return new AST_Super({start:a(e),end:o(e),name:"super"})},BinaryExpression:function(e){return"PrivateIdentifier"===e.left.type?new AST_PrivateIn({start:a(e),end:o(e),key:new AST_SymbolPrivateProperty({start:a(e.left),end:o(e.left),name:e.left.name}),value:s(e.right)}):new AST_Binary({start:a(e),end:o(e),operator:e.operator,left:s(e.left),right:s(e.right)})},LogicalExpression:function(e){return new AST_Binary({start:a(e),end:o(e),operator:e.operator,left:s(e.left),right:s(e.right)})},AssignmentExpression:function(e){return new AST_Assign({start:a(e),end:o(e),operator:e.operator,logical:"??="===e.operator||"&&="===e.operator||"||="===e.operator,left:s(e.left),right:s(e.right)})},ConditionalExpression:function(e){return new AST_Conditional({start:a(e),end:o(e),condition:s(e.test),consequent:s(e.consequent),alternative:s(e.alternate)})},NewExpression:function(e){return new AST_New({start:a(e),end:o(e),expression:s(e.callee),args:e.arguments.map(s)})},CallExpression:function(e){return new AST_Call({start:a(e),end:o(e),expression:s(e.callee),optional:e.optional,args:e.arguments.map(s)})}};function r(e){const t=[];if(e)for(const{key:n,value:r}of e.properties){const e=is_basic_identifier_string(n)?{type:"Identifier",name:n}:{type:"Literal",value:n,raw:JSON.stringify(n)};t.push({type:"ImportAttribute",key:e,value:y(r)})}return t}function a(e){var t=e.loc,n=t&&t.start,r=e.range;return new AST_Token("","",n&&n.line||0,n&&n.column||0,r?r[0]:e.start,!1,[],[],t&&t.source)}function o(e){var t=e.loc,n=t&&t.end,r=e.range;return new AST_Token("","",n&&n.line||0,n&&n.column||0,r?r[0]:e.end,!1,[],[],t&&t.source)}n.UpdateExpression=n.UnaryExpression=function(e){return new(("prefix"in e?e.prefix:"UnaryExpression"==e.type)?AST_UnaryPrefix:AST_UnaryPostfix)({start:a(e),end:o(e),operator:e.operator,expression:s(e.argument)})},n.ClassDeclaration=n.ClassExpression=function(e){return new("ClassDeclaration"===e.type?AST_DefClass:AST_ClassExpression)({start:a(e),end:o(e),name:e.id&&l("ClassDeclaration"===e.type?AST_SymbolDefClass:AST_SymbolClass,e.id),extends:s(e.superClass),properties:e.body.body.map(s)})},m(AST_EmptyStatement,function(){return{type:"EmptyStatement"}}),m(AST_BlockStatement,function(e){return{type:"BlockStatement",body:e.body.map(y)}}),m(AST_If,function(e){return{type:"IfStatement",test:y(e.condition),consequent:y(e.body),alternate:y(e.alternative)}}),m(AST_LabeledStatement,function(e){return{type:"LabeledStatement",label:y(e.label),body:y(e.body)}}),m(AST_Break,function(e){return{type:"BreakStatement",label:y(e.label)}}),m(AST_Continue,function(e){return{type:"ContinueStatement",label:y(e.label)}}),m(AST_With,function(e){return{type:"WithStatement",object:y(e.expression),body:y(e.body)}}),m(AST_Switch,function(e){return{type:"SwitchStatement",discriminant:y(e.expression),cases:e.body.map(y)}}),m(AST_Return,function(e){return{type:"ReturnStatement",argument:y(e.value)}}),m(AST_Throw,function(e){return{type:"ThrowStatement",argument:y(e.value)}}),m(AST_While,function(e){return{type:"WhileStatement",test:y(e.condition),body:y(e.body)}}),m(AST_Do,function(e){return{type:"DoWhileStatement",test:y(e.condition),body:y(e.body)}}),m(AST_For,function(e){return{type:"ForStatement",init:y(e.init),test:y(e.condition),update:y(e.step),body:y(e.body)}}),m(AST_ForIn,function(e){return{type:"ForInStatement",left:y(e.init),right:y(e.object),body:y(e.body)}}),m(AST_ForOf,function(e){return{type:"ForOfStatement",left:y(e.init),right:y(e.object),body:y(e.body),await:e.await}}),m(AST_Await,function(e){return{type:"AwaitExpression",argument:y(e.expression)}}),m(AST_Yield,function(e){return{type:"YieldExpression",argument:y(e.expression),delegate:e.is_star}}),m(AST_Debugger,function(){return{type:"DebuggerStatement"}}),m(AST_VarDefLike,function(e){return{type:"VariableDeclarator",id:y(e.name),init:y(e.value)}}),m(AST_This,function(){return{type:"ThisExpression"}}),m(AST_Super,function(){return{type:"Super"}}),m(AST_Conditional,function(e){return{type:"ConditionalExpression",test:y(e.condition),consequent:y(e.consequent),alternate:y(e.alternative)}}),m(AST_New,function(e){return{type:"NewExpression",callee:y(e.expression),arguments:e.args.map(y)}}),m(AST_Call,function(e){if(e.expression instanceof AST_SymbolRef&&"import"===e.expression.name){const[t,n]=e.args.map(y);return{type:"ImportExpression",source:t,options:n||null}}return{type:"CallExpression",callee:y(e.expression),optional:e.optional,arguments:e.args.map(y)}}),m(AST_Toplevel,function(e){return b("Program",e)}),m(AST_Expansion,function(e){return{type:f()?"RestElement":"SpreadElement",argument:y(e.expression)}}),m(AST_PrefixedTemplateString,function(e){return{type:"TaggedTemplateExpression",tag:y(e.prefix),quasi:y(e.template_string)}}),m(AST_TemplateString,function(e){for(var t=[],n=[],r=0;r<e.segments.length;r++)r%2!=0?n.push(y(e.segments[r])):t.push({type:"TemplateElement",value:{raw:e.segments[r].raw,cooked:e.segments[r].value},tail:r===e.segments.length-1});return{type:"TemplateLiteral",quasis:t,expressions:n}}),m(AST_Defun,function(e){return{type:"FunctionDeclaration",id:y(e.name),params:e.argnames.map(T),generator:e.is_generator,async:e.async,body:b("BlockStatement",e)}}),m(AST_Function,function(e){return{type:"FunctionExpression",id:y(e.name),params:e.argnames.map(T),generator:e.is_generator||!1,async:e.async||!1,body:b("BlockStatement",e)}}),m(AST_Arrow,function(e){var t=1===e.body.length&&e.body[0]instanceof AST_Return&&e.body[0].value?y(e.body[0].value):{type:"BlockStatement",body:e.body.map(y)};return{type:"ArrowFunctionExpression",params:e.argnames.map(T),async:e.async,body:t}}),m(AST_Destructuring,function(e){return e.is_array?{type:"ArrayPattern",elements:e.names.map(e=>e instanceof AST_Hole?null:T(e))}:{type:"ObjectPattern",properties:e.names.map(e=>{if(e instanceof AST_ObjectKeyVal){var t=e.computed_key();const[n,r]=d(e.key,t,e.quote,e.value);return{type:"Property",computed:t,kind:"init",key:r,method:!1,shorthand:n,value:T(e.value)}}return T(e)})}}),m(AST_DefaultAssign,function(e){return{type:"AssignmentPattern",left:T(e.left),right:y(e.right)}}),m(AST_Directive,function(e){return{type:"ExpressionStatement",expression:{type:"Literal",value:e.value,raw:e.print_to_string()},directive:e.value}}),m(AST_SimpleStatement,function(e){return{type:"ExpressionStatement",expression:y(e.body)}}),m(AST_SwitchBranch,function(e){return{type:"SwitchCase",test:y(e.expression),consequent:e.body.map(y)}}),m(AST_Try,function(e){return{type:"TryStatement",block:A(e.body),handler:y(e.bcatch),guardedHandlers:[],finalizer:y(e.bfinally)}}),m(AST_Catch,function(e){return{type:"CatchClause",param:null!=e.argname?T(e.argname):null,body:A(e)}}),m(AST_DefinitionsLike,function(e){return{type:"VariableDeclaration",kind:e instanceof AST_Const?"const":e instanceof AST_Let?"let":e instanceof AST_Using?e.await?"await using":"using":"var",declarations:e.definitions.map(y)}}),m(AST_Export,function(e){if(e.exported_names){var t=e.exported_names[0];if(t&&"*"===t.name.name&&!t.name.quote){var n=t.foreign_name,a="*"!==n.name||n.quote?y(n):null;return{type:"ExportAllDeclaration",source:y(e.module_name),exported:a,attributes:r(e.attributes)}}return{type:"ExportNamedDeclaration",specifiers:e.exported_names.map(function(e){return{type:"ExportSpecifier",exported:y(e.foreign_name),local:y(e.name)}}),declaration:y(e.exported_definition),source:y(e.module_name),attributes:r(e.attributes)}}return e.is_default?{type:"ExportDefaultDeclaration",declaration:y(e.exported_value||e.exported_definition)}:{type:"ExportNamedDeclaration",declaration:y(e.exported_value||e.exported_definition),specifiers:[],source:null}}),m(AST_Import,function(e){var t=[];if(e.imported_name&&t.push({type:"ImportDefaultSpecifier",local:y(e.imported_name)}),e.imported_names){var n=e.imported_names[0].foreign_name;"*"!==n.name||n.quote?e.imported_names.forEach(function(e){t.push({type:"ImportSpecifier",local:y(e.name),imported:y(e.foreign_name)})}):t.push({type:"ImportNamespaceSpecifier",local:y(e.imported_names[0].name)})}return{type:"ImportDeclaration",specifiers:t,source:y(e.module_name),attributes:r(e.attributes)}}),m(AST_ImportMeta,function(){return{type:"MetaProperty",meta:{type:"Identifier",name:"import"},property:{type:"Identifier",name:"meta"}}}),m(AST_Sequence,function(e){return{type:"SequenceExpression",expressions:e.expressions.map(y)}}),m(AST_DotHash,function(e){return{type:"MemberExpression",object:y(e.expression),computed:!1,property:{type:"PrivateIdentifier",name:e.property},optional:e.optional}}),m(AST_PropAccess,function(e){var t=e instanceof AST_Sub;return{type:"MemberExpression",object:y(e.expression),computed:t,property:t?y(e.property):{type:"Identifier",name:e.property},optional:e.optional}}),m(AST_Chain,function(e){return{type:"ChainExpression",expression:y(e.expression)}}),m(AST_Unary,function(e){return{type:"++"==e.operator||"--"==e.operator?"UpdateExpression":"UnaryExpression",operator:e.operator,prefix:e instanceof AST_UnaryPrefix,argument:y(e.expression)}}),m(AST_Binary,function(e){if("="==e.operator&&f())return{type:"AssignmentPattern",left:y(e.left),right:y(e.right)};return{type:"&&"==e.operator||"||"==e.operator||"??"===e.operator?"LogicalExpression":"BinaryExpression",left:y(e.left),operator:e.operator,right:y(e.right)}}),m(AST_Assign,function(e){return{type:"AssignmentExpression",operator:e.operator,left:y(e.left),right:y(e.right)}}),m(AST_PrivateIn,function(e){return{type:"BinaryExpression",left:{type:"PrivateIdentifier",name:e.key.name},operator:"in",right:y(e.value)}}),m(AST_Array,function(e){return{type:"ArrayExpression",elements:e.elements.map(y)}}),m(AST_Object,function(e){return{type:"ObjectExpression",properties:e.properties.map(y)}}),m(AST_ObjectProperty,function(e,t){var n=e.computed_key();const[r,a]=d(e.key,n,e.quote,e.value);var o;if(e instanceof AST_ObjectGetter?o="get":e instanceof AST_ObjectSetter&&(o="set"),e instanceof AST_PrivateGetter||e instanceof AST_PrivateSetter){return{type:"MethodDefinition",computed:!1,kind:e instanceof AST_PrivateGetter?"get":"set",static:e.static,key:{type:"PrivateIdentifier",name:e.key.name},value:y(e.value)}}return e instanceof AST_ClassPrivateProperty?{type:"PropertyDefinition",key:{type:"PrivateIdentifier",name:e.key.name},value:y(e.value),computed:!1,static:e.static}:e instanceof AST_ClassProperty?{type:"PropertyDefinition",key:a,value:y(e.value),computed:n,static:e.static}:t instanceof AST_Class?{type:"MethodDefinition",computed:n,kind:o,static:e.static,key:y(e.key),value:y(e.value)}:{type:"Property",computed:n,method:!1,shorthand:r,kind:o,key:a,value:y(e.value)}}),m(AST_ObjectKeyVal,function(e){var t=e.computed_key();const[n,r]=d(e.key,t,e.quote,e.value);return{type:"Property",computed:t,shorthand:n,method:!1,kind:"init",key:r,value:y(e.value)}}),m(AST_ConciseMethod,function(e,t){const n=e.computed_key(),[r,a]=d(e.key,n,e.quote,e.value);return t instanceof AST_Object?{type:"Property",kind:"init",computed:n,method:!0,shorthand:!1,key:a,value:y(e.value)}:{type:"MethodDefinition",kind:n||"constructor"!==e.key.name?"method":"constructor",computed:n,key:a,value:y(e.value),static:e.static}}),m(AST_PrivateMethod,function(e){return{type:"MethodDefinition",kind:"method",key:{type:"PrivateIdentifier",name:e.key.name},value:y(e.value),computed:!1,static:e.static}}),m(AST_Class,function(e){return{type:e instanceof AST_ClassExpression?"ClassExpression":"ClassDeclaration",superClass:y(e.extends),id:e.name?y(e.name):null,body:{type:"ClassBody",body:e.properties.map(y)}}}),m(AST_ClassStaticBlock,function(e){return{type:"StaticBlock",body:e.body.map(y)}}),m(AST_NewTarget,function(){return{type:"MetaProperty",meta:{type:"Identifier",name:"new"},property:{type:"Identifier",name:"target"}}}),m(AST_Symbol,function(e,t){if(e instanceof AST_SymbolMethod&&t.quote||(e instanceof AST_SymbolImportForeign||e instanceof AST_SymbolExportForeign||e instanceof AST_SymbolExport)&&e.quote)return{type:"Literal",value:e.name};var n=e.definition();return{type:"Identifier",name:n?n.mangled_name||n.name:e.name}}),m(AST_RegExp,function(e){const t=e.value.source,n=e.value.flags;return{type:"Literal",value:null,raw:e.print_to_string(),regex:{pattern:t,flags:n}}}),m(AST_Constant,function(e){return{type:"Literal",value:e.value,raw:e.raw||e.print_to_string()}}),m(AST_Atom,function(e){return{type:"Identifier",name:String(e.value)}}),m(AST_BigInt,e=>({type:"Literal",value:null,bigint:"function"==typeof BigInt?BigInt(e.value).toString():e.value,raw:e.raw})),AST_Boolean.DEFMETHOD("to_mozilla_ast",AST_Constant.prototype.to_mozilla_ast),AST_Null.DEFMETHOD("to_mozilla_ast",AST_Constant.prototype.to_mozilla_ast),AST_Hole.DEFMETHOD("to_mozilla_ast",function(){return null}),AST_Block.DEFMETHOD("to_mozilla_ast",AST_BlockStatement.prototype.to_mozilla_ast),AST_Lambda.DEFMETHOD("to_mozilla_ast",AST_Function.prototype.to_mozilla_ast);var i=null;function s(e){return null==e?null:n[e.type](e)}function u(e,t){return t||"Literal"!==e.type||"string"!=typeof e.value?"":'"'}function l(e,t,n){return new e({start:a(t),quote:n?'"':void 0,name:"Identifier"===t.type?t.name:String(t.value),end:o(t)})}function p(t,n){return new(n?AST_Accessor:AST_Function)({start:a(t),end:o(t),name:t.id&&l(n?AST_SymbolMethod:AST_SymbolLambda,t.id),argnames:t.params.map(e=>S(e,AST_SymbolFunarg)),is_generator:t.generator,async:t.async,body:e(s(t.body).body)})}function S(e,t){switch(e.type){case"ObjectPattern":return new AST_Destructuring({start:a(e),end:o(e),names:e.properties.map(e=>S(e,t)),is_array:!1});case"Property":var n=e.key,r={start:a(n||e.value),end:o(e.value),key:"Identifier"==n.type?n.name:String(n.value),quote:e.computed||"Literal"!==n.type||"string"!=typeof n.value?"":'"',value:S(e.value,t)};return e.computed&&(r.key=s(e.key)),new AST_ObjectKeyVal(r);case"ArrayPattern":return new AST_Destructuring({start:a(e),end:o(e),names:e.elements.map(function(e){return null===e?new AST_Hole:S(e,t)}),is_array:!0});case"SpreadElement":case"RestElement":return new AST_Expansion({start:a(e),end:o(e),expression:S(e.argument,t)});case"AssignmentPattern":return new AST_DefaultAssign({start:a(e),end:o(e),left:S(e.left,t),operator:"=",right:s(e.right)});case"Identifier":return new t({start:a(e),end:o(e),name:e.name});default:throw new Error("Invalid node type for destructuring: "+e.type)}}function c(e){if(!e)return null;const t=l(AST_LabelRef,e);let n=i.length;for(;n--;){const e=i[n];if(t.name===e.name){t.thedef=e;break}}return t}function m(e,t){e.DEFMETHOD("to_mozilla_ast",function(e){return n=this,r=t(this,e),a=n.start,o=n.end,a&&o?(null!=a.pos&&null!=o.endpos&&(r.range=[a.pos,o.endpos]),a.line&&(r.loc={start:{line:a.line,column:a.col},end:o.endline?{line:o.endline,column:o.endcol}:null},a.file&&(r.loc.source=a.file)),r):r;var n,r,a,o})}AST_Node.from_mozilla_ast=function(e){var t=i;i=[];var n=s(e);return i=t,n};var _=null;function y(e){null===_&&(_=[]),_.push(e);var t=null!=e?e.to_mozilla_ast(_[_.length-2]):null;return _.pop(),0===_.length&&(_=null),t}function d(e,t=!1,n=!1,r=null){if(t)return[!1,y(e)];const a="string"==typeof e?e:e.name;let o;o=n?{type:"Literal",value:a,raw:JSON.stringify(a)}:""+ +a===a&&+a>=0?{type:"Literal",value:+a,raw:JSON.stringify(+a)}:{type:"Identifier",name:a};return["Identifier"===o.type&&o.name===a&&(r instanceof AST_Symbol&&r.name===a||r instanceof AST_DefaultAssign&&r.left.name===a),o]}function T(e){if(e instanceof AST_Expansion)return{type:"RestElement",argument:T(e.expression)};if(e instanceof AST_Symbol||e instanceof AST_Destructuring||e instanceof AST_DefaultAssign||e instanceof AST_PropAccess)return y(e);throw new Error(e.TYPE)}function f(){for(var e=_.length;e--;)if(_[e]instanceof AST_Destructuring)return!0;return!1}function A(e){return{type:"BlockStatement",body:e.body.map(y)}}function b(e,t){var n=t.body.map(y);return t.body[0]instanceof AST_SimpleStatement&&t.body[0].body instanceof AST_String&&n.unshift(y(new AST_EmptyStatement(t.body[0]))),{type:e,body:n}}}();