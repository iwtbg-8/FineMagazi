import{List,clone,walk}from"css-tree";import{buildIndex}from"./usage.js";import clean from"./clean/index.js";import replace from"./replace/index.js";import restructure from"./restructure/index.js";function readChunk(e,t){const r=new List;let n,l=!1;return e.nextUntil(e.head,(e,o,i)=>{if("Comment"===e.type)return t&&"!"===e.value.charAt(0)?!(!l&&!n)||(i.remove(o),void(n=e)):void i.remove(o);"WhiteSpace"!==e.type&&(l=!0),r.insert(i.remove(o))}),{comment:n,stylesheet:{type:"StyleSheet",loc:null,children:r}}}function compressChunk(e,t,r,n){n.logger(`Compress block #${r}`,null,!0);let l=1;return"StyleSheet"===e.type&&(e.firstAtrulesAllowed=t,e.id=l++),walk(e,{visit:"Atrule",enter(e){null!==e.block&&(e.block.id=l++)}}),n.logger("init",e),clean(e,n),n.logger("clean",e),replace(e,n),n.logger("replace",e),n.restructuring&&restructure(e,n),e}function getCommentsOption(e){let t="comments"in e?e.comments:"exclamation";return"boolean"==typeof t?t=!!t&&"exclamation":"exclamation"!==t&&"first-exclamation"!==t&&(t=!1),t}function getRestructureOption(e){return"restructure"in e?e.restructure:!("restructuring"in e)||e.restructuring}function wrapBlock(e){return(new List).appendData({type:"Rule",loc:null,prelude:{type:"SelectorList",loc:null,children:(new List).appendData({type:"Selector",loc:null,children:(new List).appendData({type:"TypeSelector",loc:null,name:"x"})})},block:e})}export default function compress(e,t){e=e||{type:"StyleSheet",loc:null,children:new List};const r={logger:"function"==typeof(t=t||{}).logger?t.logger:function(){},restructuring:getRestructureOption(t),forceMediaMerge:Boolean(t.forceMediaMerge),usage:!!t.usage&&buildIndex(t.usage)},n=new List;let l,o,i,c=getCommentsOption(t),s=!0,u=1;t.clone&&(e=clone(e)),"StyleSheet"===e.type?(l=e.children,e.children=n):l=wrapBlock(e);do{if(o=readChunk(l,Boolean(c)),compressChunk(o.stylesheet,s,u++,r),i=o.stylesheet.children,o.comment&&(n.isEmpty||n.insert(List.createItem({type:"Raw",value:"\n"})),n.insert(List.createItem(o.comment)),i.isEmpty||n.insert(List.createItem({type:"Raw",value:"\n"}))),s&&!i.isEmpty){const e=i.last;("Atrule"!==e.type||"import"!==e.name&&"charset"!==e.name)&&(s=!1)}"exclamation"!==c&&(c=!1),n.appendList(i)}while(!l.isEmpty);return{ast:e}}