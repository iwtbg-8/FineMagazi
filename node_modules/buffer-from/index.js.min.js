var toString=Object.prototype.toString,isModern="undefined"!=typeof Buffer&&"function"==typeof Buffer.alloc&&"function"==typeof Buffer.allocUnsafe&&"function"==typeof Buffer.from;function isArrayBuffer(r){return"ArrayBuffer"===toString.call(r).slice(8,-1)}function fromArrayBuffer(r,f,e){f>>>=0;var n=r.byteLength-f;if(n<0)throw new RangeError("'offset' is out of bounds");if(void 0===e)e=n;else if((e>>>=0)>n)throw new RangeError("'length' is out of bounds");return isModern?Buffer.from(r.slice(f,f+e)):new Buffer(new Uint8Array(r.slice(f,f+e)))}function fromString(r,f){if("string"==typeof f&&""!==f||(f="utf8"),!Buffer.isEncoding(f))throw new TypeError('"encoding" must be a valid string encoding');return isModern?Buffer.from(r,f):new Buffer(r,f)}function bufferFrom(r,f,e){if("number"==typeof r)throw new TypeError('"value" argument must not be a number');return isArrayBuffer(r)?fromArrayBuffer(r,f,e):"string"==typeof r?fromString(r,f):isModern?Buffer.from(r):new Buffer(r)}module.exports=bufferFrom;